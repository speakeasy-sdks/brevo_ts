/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import { z } from "zod";

/**
 * **Set target after login success**
 *
 * @remarks
 * * **automation** - Redirect to Automation after login
 * * **email_campaign** - Redirect to Email Campaign after login
 * * **contacts** - Redirect to Contacts after login
 * * **landing_pages** - Redirect to Landing Pages after login
 * * **email_transactional** - Redirect to Email Transactional after login
 * * **senders** - Redirect to Senders after login
 * * **sms_campaign** - Redirect to Sms Campaign after login
 * * **sms_transactional** - Redirect to Sms Transactional after login
 *
 */
export enum Target {
    Automation = "automation",
    EmailCampaign = "email_campaign",
    Contacts = "contacts",
    LandingPages = "landing_pages",
    EmailTransactional = "email_transactional",
    Senders = "senders",
    SmsCampaign = "sms_campaign",
    SmsTransactional = "sms_transactional",
}

export type PostCorporateSubAccountSsoTokenRequestBody = {
    /**
     * User email of sub-account organization
     */
    email?: string | undefined;
    /**
     * Id of the sub-account organization
     */
    id: number;
    /**
     * **Set target after login success**
     *
     * @remarks
     * * **automation** - Redirect to Automation after login
     * * **email_campaign** - Redirect to Email Campaign after login
     * * **contacts** - Redirect to Contacts after login
     * * **landing_pages** - Redirect to Landing Pages after login
     * * **email_transactional** - Redirect to Email Transactional after login
     * * **senders** - Redirect to Senders after login
     * * **sms_campaign** - Redirect to Sms Campaign after login
     * * **sms_transactional** - Redirect to Sms Transactional after login
     *
     */
    target?: Target | undefined;
    /**
     * Set the full target URL after login success. The user will land directly on this target URL after login
     */
    url?: string | undefined;
};

export type PostCorporateSubAccountSsoTokenResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Session token
     */
    getSsoToken?: components.GetSsoToken | undefined;
};

/** @internal */
export const Target$ = z.nativeEnum(Target);

/** @internal */
export namespace PostCorporateSubAccountSsoTokenRequestBody$ {
    export type Inbound = {
        email?: string | undefined;
        id: number;
        target?: Target | undefined;
        url?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostCorporateSubAccountSsoTokenRequestBody,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            email: z.string().optional(),
            id: z.number().int(),
            target: Target$.optional(),
            url: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                id: v.id,
                ...(v.target === undefined ? null : { target: v.target }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });

    export type Outbound = {
        email?: string | undefined;
        id: number;
        target?: Target | undefined;
        url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostCorporateSubAccountSsoTokenRequestBody
    > = z
        .object({
            email: z.string().optional(),
            id: z.number().int(),
            target: Target$.optional(),
            url: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                id: v.id,
                ...(v.target === undefined ? null : { target: v.target }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });
}

/** @internal */
export namespace PostCorporateSubAccountSsoTokenResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        getSsoToken?: components.GetSsoToken$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostCorporateSubAccountSsoTokenResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            getSsoToken: components.GetSsoToken$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.getSsoToken === undefined ? null : { getSsoToken: v.getSsoToken }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        getSsoToken?: components.GetSsoToken$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostCorporateSubAccountSsoTokenResponse
    > = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            getSsoToken: components.GetSsoToken$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.getSsoToken === undefined ? null : { getSsoToken: v.getSsoToken }),
            };
        });
}
