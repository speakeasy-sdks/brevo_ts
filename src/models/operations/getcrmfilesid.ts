/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import * as z from "zod";

export type GetCrmFilesIdRequest = {
    /**
     * File id to download.
     */
    id: string;
};

export type GetCrmFilesIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Returns downloadable file link. Valid for next 5 minutes only.
     */
    fileDownloadableLink?: components.FileDownloadableLink | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace GetCrmFilesIdRequest$ {
    export type Inbound = {
        id: string;
    };

    export const inboundSchema: z.ZodType<GetCrmFilesIdRequest, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
            };
        });

    export type Outbound = {
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCrmFilesIdRequest> = z
        .object({
            id: z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
            };
        });
}

/** @internal */
export namespace GetCrmFilesIdResponse$ {
    export type Inbound = {
        ContentType: string;
        FileDownloadableLink?: components.FileDownloadableLink$.Inbound | undefined;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<GetCrmFilesIdResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            FileDownloadableLink: components.FileDownloadableLink$.inboundSchema.optional(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                ...(v.FileDownloadableLink === undefined
                    ? null
                    : { fileDownloadableLink: v.FileDownloadableLink }),
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        ContentType: string;
        FileDownloadableLink?: components.FileDownloadableLink$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCrmFilesIdResponse> = z
        .object({
            contentType: z.string(),
            fileDownloadableLink: components.FileDownloadableLink$.outboundSchema.optional(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                ...(v.fileDownloadableLink === undefined
                    ? null
                    : { FileDownloadableLink: v.fileDownloadableLink }),
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
