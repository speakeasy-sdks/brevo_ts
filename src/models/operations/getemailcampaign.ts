/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";

/**
 * Filter on the type of statistics required. Example **globalStats** value will only fetch globalStats info of the campaign in returned response.
 */
export enum Statistics {
    GlobalStats = "globalStats",
    LinksStats = "linksStats",
    StatsByDomain = "statsByDomain",
    StatsByDevice = "statsByDevice",
    StatsByBrowser = "statsByBrowser",
}

export class GetEmailCampaignRequest extends SpeakeasyBase {
    /**
     * Id of the campaign
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=campaignId" })
    campaignId: number;

    /**
     * Filter on the type of statistics required. Example **globalStats** value will only fetch globalStats info of the campaign in returned response.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=statistics" })
    statistics?: Statistics;
}

export class GetEmailCampaignResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Email campaign informations
     */
    @SpeakeasyMetadata()
    getEmailCampaign?: components.GetEmailCampaign;
}
