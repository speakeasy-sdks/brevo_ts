/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import * as z from "zod";

export type PutCorporateSubAccountIdApplicationsToggleRequest = {
    /**
     * Id of the sub-account organization (mandatory)
     */
    id: number;
    /**
     * List of applications to activate or deactivate on a sub-account
     */
    subAccountAppsToggleRequest: components.SubAccountAppsToggleRequest;
};

export type PutCorporateSubAccountIdApplicationsToggleResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace PutCorporateSubAccountIdApplicationsToggleRequest$ {
    export type Inbound = {
        id: number;
        subAccountAppsToggleRequest: components.SubAccountAppsToggleRequest$.Inbound;
    };

    export const inboundSchema: z.ZodType<
        PutCorporateSubAccountIdApplicationsToggleRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.number().int(),
            subAccountAppsToggleRequest: components.SubAccountAppsToggleRequest$.inboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                subAccountAppsToggleRequest: v.subAccountAppsToggleRequest,
            };
        });

    export type Outbound = {
        id: number;
        subAccountAppsToggleRequest: components.SubAccountAppsToggleRequest$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PutCorporateSubAccountIdApplicationsToggleRequest
    > = z
        .object({
            id: z.number().int(),
            subAccountAppsToggleRequest: components.SubAccountAppsToggleRequest$.outboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                subAccountAppsToggleRequest: v.subAccountAppsToggleRequest,
            };
        });
}

/** @internal */
export namespace PutCorporateSubAccountIdApplicationsToggleResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<
        PutCorporateSubAccountIdApplicationsToggleResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PutCorporateSubAccountIdApplicationsToggleResponse
    > = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
