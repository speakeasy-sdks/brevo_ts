/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";

/**
 * Filter by date
 */
export enum FilterDate {
    Overdue = "overdue",
    Today = "today",
    Tomorrow = "tomorrow",
    Week = "week",
    Range = "range",
}

/**
 * Filter by task status
 */
export enum FilterStatus {
    Done = "done",
    Undone = "undone",
}

/**
 * Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed
 */
export enum GetCrmTasksQueryParamSort {
    Asc = "asc",
    Desc = "desc",
}

export class GetCrmTasksRequest extends SpeakeasyBase {
    /**
     * dateFrom to date range filter type (timestamp in milliseconds)
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=dateFrom" })
    dateFrom?: number;

    /**
     * dateTo to date range filter type (timestamp in milliseconds)
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=dateTo" })
    dateTo?: number;

    /**
     * Filter by assignTo id
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=filter[assignTo]" })
    filterAssignTo?: string;

    /**
     * Filter by companies ids
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=filter[companies]" })
    filterCompanies?: string;

    /**
     * Filter by contact ids
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=filter[contacts]" })
    filterContacts?: string;

    /**
     * Filter by date
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=filter[date]" })
    filterDate?: FilterDate;

    /**
     * Filter by deals ids
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=filter[deals]" })
    filterDeals?: string;

    /**
     * Filter by task status
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=filter[status]" })
    filterStatus?: FilterStatus;

    /**
     * Filter by task type (ID)
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=filter[type]" })
    filterType?: string;

    /**
     * Number of documents per page
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;

    /**
     * Index of the first document of the page
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=offset" })
    offset?: number;

    /**
     * Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
    sort?: GetCrmTasksQueryParamSort;

    /**
     * The field used to sort field names.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sortBy" })
    sortBy?: string;
}

export class GetCrmTasksResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Returns task list with filters
     */
    @SpeakeasyMetadata()
    taskList?: components.TaskList;
}
