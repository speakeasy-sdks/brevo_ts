/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type RemoveCreditsRequest = {
    /**
     * Either auth key or id of reseller's child
     */
    childIdentifier: string;
    /**
     * Values to post to remove email or SMS credits from a specific child account
     */
    removeCredits: components.RemoveCredits;
};

export type RemoveCreditsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Credits removed
     */
    remainingCreditModel?: components.RemainingCreditModel | undefined;
};

/** @internal */
export namespace RemoveCreditsRequest$ {
    export type Inbound = {
        childIdentifier: string;
        removeCredits: components.RemoveCredits$.Inbound;
    };

    export const inboundSchema: z.ZodType<RemoveCreditsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            childIdentifier: z.string(),
            removeCredits: z.lazy(() => components.RemoveCredits$.inboundSchema),
        })
        .transform((v) => {
            return {
                childIdentifier: v.childIdentifier,
                removeCredits: v.removeCredits,
            };
        });

    export type Outbound = {
        childIdentifier: string;
        removeCredits: components.RemoveCredits$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RemoveCreditsRequest> = z
        .object({
            childIdentifier: z.string(),
            removeCredits: z.lazy(() => components.RemoveCredits$.outboundSchema),
        })
        .transform((v) => {
            return {
                childIdentifier: v.childIdentifier,
                removeCredits: v.removeCredits,
            };
        });
}

/** @internal */
export namespace RemoveCreditsResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        remainingCreditModel?: components.RemainingCreditModel$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<RemoveCreditsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            remainingCreditModel: components.RemainingCreditModel$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.remainingCreditModel === undefined
                    ? null
                    : { remainingCreditModel: v.remainingCreditModel }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        remainingCreditModel?: components.RemainingCreditModel$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RemoveCreditsResponse> = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            remainingCreditModel: components.RemainingCreditModel$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.remainingCreditModel === undefined
                    ? null
                    : { remainingCreditModel: v.remainingCreditModel }),
            };
        });
}
