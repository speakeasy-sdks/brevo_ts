/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { RFCDate } from "../../types";
import { AxiosResponse } from "axios";

/**
 * Filter the records by `authType` of the feed.
 */
export enum AuthType {
    Basic = "basic",
    Token = "token",
    NoAuth = "noAuth",
}

/**
 * Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed.
 */
export enum GetAllExternalFeedsQueryParamSort {
    Asc = "asc",
    Desc = "desc",
}

export class GetAllExternalFeedsRequest extends SpeakeasyBase {
    /**
     * Filter the records by `authType` of the feed.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=authType" })
    authType?: AuthType;

    /**
     * Mandatory if `startDate` is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=endDate" })
    endDate?: RFCDate;

    /**
     * Number of documents returned per page.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;

    /**
     * Index of the first document on the page.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=offset" })
    offset?: number;

    /**
     * Can be used to filter records by search keyword on feed name
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=search" })
    search?: string;

    /**
     * Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
    sort?: GetAllExternalFeedsQueryParamSort;

    /**
     * Mandatory if `endDate` is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Can be maximum 30 days older than current date.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=startDate" })
    startDate?: RFCDate;
}

export class GetAllExternalFeedsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * External feeds
     */
    @SpeakeasyMetadata()
    getAllExternalFeeds?: components.GetAllExternalFeeds;
}
