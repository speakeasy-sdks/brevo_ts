/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { RFCDate } from "../../types";
import { Expose, Transform, Type } from "class-transformer";

export class Links extends SpeakeasyBase {
    /**
     * Number of clicks on this link for the campaign
     */
    @SpeakeasyMetadata()
    @Expose({ name: "count" })
    count: number;

    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;

    /**
     * IP from which the user has clicked on the link
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ip" })
    ip: string;

    /**
     * URL of the clicked link
     */
    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url: string;
}

export class Clicked extends SpeakeasyBase {
    /**
     * ID of the campaign which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "campaignId" })
    campaignId: number;

    @SpeakeasyMetadata({ elemType: Links })
    @Expose({ name: "links" })
    @Type(() => Links)
    links: Links[];
}

export class Complaints extends SpeakeasyBase {
    /**
     * ID of the campaign which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "campaignId" })
    campaignId: number;

    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;
}

export class Delivered extends SpeakeasyBase {
    /**
     * ID of the campaign which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "campaignId" })
    campaignId: number;

    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;
}

export class HardBounces extends SpeakeasyBase {
    /**
     * ID of the campaign which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "campaignId" })
    campaignId: number;

    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;
}

export class MessagesSent extends SpeakeasyBase {
    /**
     * ID of the campaign which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "campaignId" })
    campaignId: number;

    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;
}

export class Opened extends SpeakeasyBase {
    /**
     * ID of the campaign which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "campaignId" })
    campaignId: number;

    /**
     * Number of openings of the campaign
     */
    @SpeakeasyMetadata()
    @Expose({ name: "count" })
    count: number;

    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;

    /**
     * IP from which the user has opened the campaign
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ip" })
    ip: string;
}

export class SoftBounces extends SpeakeasyBase {
    /**
     * ID of the campaign which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "campaignId" })
    campaignId: number;

    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;
}

export class TransacAttributes extends SpeakeasyBase {
    /**
     * Date of the order
     */
    @SpeakeasyMetadata()
    @Expose({ name: "orderDate" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    orderDate: RFCDate;

    /**
     * ID of the order
     */
    @SpeakeasyMetadata()
    @Expose({ name: "orderId" })
    orderId: number;

    /**
     * Price of the order
     */
    @SpeakeasyMetadata()
    @Expose({ name: "orderPrice" })
    orderPrice: number;
}

export class AdminUnsubscription extends SpeakeasyBase {
    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;

    /**
     * IP from which the user has been unsubscribed
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ip" })
    ip?: string;
}

export class UserUnsubscription extends SpeakeasyBase {
    /**
     * ID of the campaign which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "campaignId" })
    campaignId: number;

    /**
     * UTC date-time of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventTime" })
    eventTime: string;

    /**
     * IP from which the user has unsubscribed
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ip" })
    ip?: string;
}

export class Unsubscriptions extends SpeakeasyBase {
    /**
     * Contact has been unsubscribed from the administrator
     */
    @SpeakeasyMetadata({ elemType: AdminUnsubscription })
    @Expose({ name: "adminUnsubscription" })
    @Type(() => AdminUnsubscription)
    adminUnsubscription: AdminUnsubscription[];

    /**
     * Contact has unsubscribed via the unsubscription link in the email
     */
    @SpeakeasyMetadata({ elemType: UserUnsubscription })
    @Expose({ name: "userUnsubscription" })
    @Type(() => UserUnsubscription)
    userUnsubscription: UserUnsubscription[];
}

/**
 * Campaign Statistics for the contact
 */
export class GetContactCampaignStats extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: Clicked })
    @Expose({ name: "clicked" })
    @Type(() => Clicked)
    clicked?: Clicked[];

    @SpeakeasyMetadata({ elemType: Complaints })
    @Expose({ name: "complaints" })
    @Type(() => Complaints)
    complaints?: Complaints[];

    @SpeakeasyMetadata({ elemType: Delivered })
    @Expose({ name: "delivered" })
    @Type(() => Delivered)
    delivered?: Delivered[];

    @SpeakeasyMetadata({ elemType: HardBounces })
    @Expose({ name: "hardBounces" })
    @Type(() => HardBounces)
    hardBounces?: HardBounces[];

    @SpeakeasyMetadata({ elemType: MessagesSent })
    @Expose({ name: "messagesSent" })
    @Type(() => MessagesSent)
    messagesSent?: MessagesSent[];

    @SpeakeasyMetadata({ elemType: Opened })
    @Expose({ name: "opened" })
    @Type(() => Opened)
    opened?: Opened[];

    @SpeakeasyMetadata({ elemType: SoftBounces })
    @Expose({ name: "softBounces" })
    @Type(() => SoftBounces)
    softBounces?: SoftBounces[];

    @SpeakeasyMetadata({ elemType: TransacAttributes })
    @Expose({ name: "transacAttributes" })
    @Type(() => TransacAttributes)
    transacAttributes?: TransacAttributes[];

    @SpeakeasyMetadata()
    @Expose({ name: "unsubscriptions" })
    @Type(() => Unsubscriptions)
    unsubscriptions?: Unsubscriptions;
}
