/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Company, Company$ } from "./company";
import * as z from "zod";

/**
 * List of companies
 */
export type CompaniesList = {
    /**
     * List of compaies
     */
    items?: Array<Company> | undefined;
};

/** @internal */
export namespace CompaniesList$ {
    export type Inbound = {
        items?: Array<Company$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<CompaniesList, z.ZodTypeDef, Inbound> = z
        .object({
            items: z.array(Company$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.items === undefined ? null : { items: v.items }),
            };
        });

    export type Outbound = {
        items?: Array<Company$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CompaniesList> = z
        .object({
            items: z.array(Company$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.items === undefined ? null : { items: v.items }),
            };
        });
}
