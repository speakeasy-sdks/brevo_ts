/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateDomain = {
    /**
     * Domain name
     */
    name: string;
};

/** @internal */
export namespace CreateDomain$ {
    export type Inbound = {
        name: string;
    };

    export const inboundSchema: z.ZodType<CreateDomain, z.ZodTypeDef, Inbound> = z
        .object({
            name: z.string(),
        })
        .transform((v) => {
            return {
                name: v.name,
            };
        });

    export type Outbound = {
        name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateDomain> = z
        .object({
            name: z.string(),
        })
        .transform((v) => {
            return {
                name: v.name,
            };
        });
}
