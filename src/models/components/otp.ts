/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Otp = {
    /**
     * 6 digit OTP received on email
     */
    otp: number;
};

/** @internal */
export namespace Otp$ {
    export type Inbound = {
        otp: number;
    };

    export const inboundSchema: z.ZodType<Otp, z.ZodTypeDef, Inbound> = z
        .object({
            otp: z.number().int(),
        })
        .transform((v) => {
            return {
                otp: v.otp,
            };
        });

    export type Outbound = {
        otp: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Otp> = z
        .object({
            otp: z.number().int(),
        })
        .transform((v) => {
            return {
                otp: v.otp,
            };
        });
}
