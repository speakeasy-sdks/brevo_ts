/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetSsoToken = {
    /**
     * Session token, it will remain valid for 15 days.
     */
    token: string;
};

/** @internal */
export namespace GetSsoToken$ {
    export type Inbound = {
        token: string;
    };

    export const inboundSchema: z.ZodType<GetSsoToken, z.ZodTypeDef, Inbound> = z
        .object({
            token: z.string(),
        })
        .transform((v) => {
            return {
                token: v.token,
            };
        });

    export type Outbound = {
        token: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetSsoToken> = z
        .object({
            token: z.string(),
        })
        .transform((v) => {
            return {
                token: v.token,
            };
        });
}
