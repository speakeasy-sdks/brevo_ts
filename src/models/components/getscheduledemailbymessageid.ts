/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Current status of the scheduled email
 */
export enum GetScheduledEmailByMessageIdStatus {
    InProgress = "inProgress",
    Queued = "queued",
    Processed = "processed",
    Error = "error",
}

export type GetScheduledEmailByMessageId = {
    /**
     * Datetime on which the email was scheduled
     */
    createdAt: Date;
    /**
     * Datetime for which the email was scheduled
     */
    scheduledAt: Date;
    /**
     * Current status of the scheduled email
     */
    status: GetScheduledEmailByMessageIdStatus;
};

/** @internal */
export const GetScheduledEmailByMessageIdStatus$ = z.nativeEnum(GetScheduledEmailByMessageIdStatus);

/** @internal */
export namespace GetScheduledEmailByMessageId$ {
    export type Inbound = {
        createdAt: string;
        scheduledAt: string;
        status: GetScheduledEmailByMessageIdStatus;
    };

    export const inboundSchema: z.ZodType<GetScheduledEmailByMessageId, z.ZodTypeDef, Inbound> = z
        .object({
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            scheduledAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            status: GetScheduledEmailByMessageIdStatus$,
        })
        .transform((v) => {
            return {
                createdAt: v.createdAt,
                scheduledAt: v.scheduledAt,
                status: v.status,
            };
        });

    export type Outbound = {
        createdAt: string;
        scheduledAt: string;
        status: GetScheduledEmailByMessageIdStatus;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetScheduledEmailByMessageId> = z
        .object({
            createdAt: z.date().transform((v) => v.toISOString()),
            scheduledAt: z.date().transform((v) => v.toISOString()),
            status: GetScheduledEmailByMessageIdStatus$,
        })
        .transform((v) => {
            return {
                createdAt: v.createdAt,
                scheduledAt: v.scheduledAt,
                status: v.status,
            };
        });
}
