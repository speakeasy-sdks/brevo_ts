/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CreateUpdateCategories, CreateUpdateCategories$ } from "./createupdatecategories";
import * as z from "zod";

export type CreateUpdateBatchCategory = {
    /**
     * array of categories objects
     */
    categories: Array<CreateUpdateCategories>;
    /**
     * Facilitate to update the existing categories in the same request (updateEnabled = true)
     */
    updateEnabled?: boolean | undefined;
};

/** @internal */
export namespace CreateUpdateBatchCategory$ {
    export type Inbound = {
        categories: Array<CreateUpdateCategories$.Inbound>;
        updateEnabled?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<CreateUpdateBatchCategory, z.ZodTypeDef, Inbound> = z
        .object({
            categories: z.array(CreateUpdateCategories$.inboundSchema),
            updateEnabled: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                categories: v.categories,
                ...(v.updateEnabled === undefined ? null : { updateEnabled: v.updateEnabled }),
            };
        });

    export type Outbound = {
        categories: Array<CreateUpdateCategories$.Outbound>;
        updateEnabled?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateUpdateBatchCategory> = z
        .object({
            categories: z.array(CreateUpdateCategories$.outboundSchema),
            updateEnabled: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                categories: v.categories,
                ...(v.updateEnabled === undefined ? null : { updateEnabled: v.updateEnabled }),
            };
        });
}
