/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Email credits remaining on the sub-account
 */
export class Emails extends SpeakeasyBase {
    /**
     * Quantity of email messaging limits provided
     */
    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity?: number;

    /**
     * Available email messaging limits for use
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remaining" })
    remaining?: number;
}

/**
 * Credits quota and remaining credits on the sub-account
 */
export class SubAccountDetailsResponseCredits extends SpeakeasyBase {
    /**
     * Email credits remaining on the sub-account
     */
    @SpeakeasyMetadata()
    @Expose({ name: "emails" })
    @Type(() => Emails)
    emails?: Emails;

    /**
     * SMS credits remaining on the sub-account
     */
    @SpeakeasyMetadata()
    @Expose({ name: "sms" })
    sms?: number;
}

/**
 * Inbox details
 */
export class Inbox extends SpeakeasyBase {
    /**
     * Quantity of inbox provided
     */
    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity?: number;

    /**
     * Available inboxes for use
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remaining" })
    remaining?: number;
}

/**
 * Landing page details
 */
export class LandingPage extends SpeakeasyBase {
    /**
     * Quantity of landing pages provided
     */
    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity?: number;

    /**
     * Available landing pages for use
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remaining" })
    remaining?: number;
}

/**
 * Multi-account details
 */
export class SubAccountDetailsResponseUsers extends SpeakeasyBase {
    /**
     * Quantity of multi-account's provided
     */
    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity?: number;

    /**
     * Available multi-accounts for use
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remaining" })
    remaining?: number;
}

/**
 * Features available on the sub-account
 */
export class SubAccountDetailsResponseFeatures extends SpeakeasyBase {
    /**
     * Inbox details
     */
    @SpeakeasyMetadata()
    @Expose({ name: "inbox" })
    @Type(() => Inbox)
    inbox?: Inbox;

    /**
     * Landing page details
     */
    @SpeakeasyMetadata()
    @Expose({ name: "landingPage" })
    @Type(() => LandingPage)
    landingPage?: LandingPage;

    /**
     * Multi-account details
     */
    @SpeakeasyMetadata()
    @Expose({ name: "users" })
    @Type(() => SubAccountDetailsResponseUsers)
    users?: SubAccountDetailsResponseUsers;
}

/**
 * Sub-account plan details
 */
export class SubAccountDetailsResponsePlanInfo extends SpeakeasyBase {
    /**
     * Credits quota and remaining credits on the sub-account
     */
    @SpeakeasyMetadata()
    @Expose({ name: "credits" })
    @Type(() => SubAccountDetailsResponseCredits)
    credits?: SubAccountDetailsResponseCredits;

    /**
     * Features available on the sub-account
     */
    @SpeakeasyMetadata()
    @Expose({ name: "features" })
    @Type(() => SubAccountDetailsResponseFeatures)
    features?: SubAccountDetailsResponseFeatures;

    /**
     * type of the plan
     */
    @SpeakeasyMetadata()
    @Expose({ name: "planType" })
    planType?: string;
}

export class SubAccountDetailsResponse extends SpeakeasyBase {
    /**
     * Sub-account company name
     */
    @SpeakeasyMetadata()
    @Expose({ name: "companyName" })
    companyName?: string;

    /**
     * Email id of the sub-account organization
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    /**
     * Name of the sub-account user
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Sub-account plan details
     */
    @SpeakeasyMetadata()
    @Expose({ name: "planInfo" })
    @Type(() => SubAccountDetailsResponsePlanInfo)
    planInfo?: SubAccountDetailsResponsePlanInfo;
}
