/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type AddContactToListByEmails = {
    /**
     * Emails to add to a list. You can pass a **maximum of 150 emails** for addition in one request. **_If you need to add the emails in bulk, please prefer /contacts/import api._**
     *
     * @remarks
     *
     */
    emails?: Array<string> | undefined;
};

/** @internal */
export namespace AddContactToListByEmails$ {
    export type Inbound = {
        emails?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<AddContactToListByEmails, z.ZodTypeDef, Inbound> = z
        .object({
            emails: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.emails === undefined ? null : { emails: v.emails }),
            };
        });

    export type Outbound = {
        emails?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddContactToListByEmails> = z
        .object({
            emails: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.emails === undefined ? null : { emails: v.emails }),
            };
        });
}
