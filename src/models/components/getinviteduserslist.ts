/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Feature accessiblity given to the user.
 */
export class FeatureAccess extends SpeakeasyBase {
    /**
     * Conversations features accessiblity.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "conversations" })
    conversations?: string;

    /**
     * CRM features accessiblity.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "crm" })
    crm?: string;

    /**
     * Marketing features accessiblity.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "marketing" })
    marketing?: string;
}

export class Users extends SpeakeasyBase {
    /**
     * Email address of the user.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email: string;

    /**
     * Feature accessiblity given to the user.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "feature_access" })
    @Type(() => FeatureAccess)
    featureAccess: FeatureAccess;

    /**
     * Flag for indicating is user owner of the organization.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "is_owner" })
    isOwner: string;

    /**
     * Status of the invited user.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: string;
}

export class GetInvitedUsersList extends SpeakeasyBase {
    /**
     * Get invited users list
     */
    @SpeakeasyMetadata({ elemType: Users })
    @Expose({ name: "users" })
    @Type(() => Users)
    users?: Users[];
}
