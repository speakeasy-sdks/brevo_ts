/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Account details of user which created the note
 */
export class AuthorId extends SpeakeasyBase {}

/**
 * Note Details
 */
export class Note extends SpeakeasyBase {
    /**
     * Account details of user which created the note
     */
    @SpeakeasyMetadata()
    @Expose({ name: "authorId" })
    @Type(() => AuthorId)
    authorId?: AuthorId;

    /**
     * Contact ids linked to a note
     */
    @SpeakeasyMetadata()
    @Expose({ name: "contactIds" })
    contactIds?: number[];

    /**
     * Note created date/time
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * Deal ids linked to a note
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dealIds" })
    dealIds?: string[];

    /**
     * Unique note Id
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * Text content of a note
     */
    @SpeakeasyMetadata()
    @Expose({ name: "text" })
    text: string;

    /**
     * Note updated date/time
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
