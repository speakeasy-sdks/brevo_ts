/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type CreateSmtpEmail = {
    /**
     * Message ID of the transactional email sent
     */
    messageId?: string | undefined;
    messageIds?: Array<string> | undefined;
};

/** @internal */
export namespace CreateSmtpEmail$ {
    export type Inbound = {
        messageId?: string | undefined;
        messageIds?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<CreateSmtpEmail, z.ZodTypeDef, Inbound> = z
        .object({
            messageId: z.string().optional(),
            messageIds: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.messageId === undefined ? null : { messageId: v.messageId }),
                ...(v.messageIds === undefined ? null : { messageIds: v.messageIds }),
            };
        });

    export type Outbound = {
        messageId?: string | undefined;
        messageIds?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateSmtpEmail> = z
        .object({
            messageId: z.string().optional(),
            messageIds: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.messageId === undefined ? null : { messageId: v.messageId }),
                ...(v.messageIds === undefined ? null : { messageIds: v.messageIds }),
            };
        });
}
