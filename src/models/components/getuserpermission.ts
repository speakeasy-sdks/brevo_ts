/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Type } from "class-transformer";

export class Privileges extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "feature" })
    feature: string;

    @SpeakeasyMetadata()
    @Expose({ name: "permissions" })
    permissions: string[];
}

/**
 * Check user permission
 */
export class GetUserPermission extends SpeakeasyBase {
    /**
     * Email address of the user.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email: string;

    /**
     * Granular feature permissions given to the user.
     */
    @SpeakeasyMetadata({ elemType: Privileges })
    @Expose({ name: "privileges" })
    @Type(() => Privileges)
    privileges: Privileges[];

    /**
     * Status of the invited user.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: string;
}
