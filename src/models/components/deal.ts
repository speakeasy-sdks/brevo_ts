/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

/**
 * Deal attributes with values
 */
export type DealSchemasAttributes = {};

/**
 * Deal Details
 */
export type Deal = {
    /**
     * Deal attributes with values
     */
    attributes?: DealSchemasAttributes | undefined;
    /**
     * Unique deal id
     */
    id?: string | undefined;
    /**
     * Companies ids for companies linked to this deal
     */
    linkedCompaniesIds?: Array<string> | undefined;
    /**
     * Contact ids for contacts linked to this deal
     */
    linkedContactsIds?: Array<number> | undefined;
};

/** @internal */
export namespace DealSchemasAttributes$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<DealSchemasAttributes, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DealSchemasAttributes> =
        z.object({});
}

/** @internal */
export namespace Deal$ {
    export type Inbound = {
        attributes?: DealSchemasAttributes$.Inbound | undefined;
        id?: string | undefined;
        linkedCompaniesIds?: Array<string> | undefined;
        linkedContactsIds?: Array<number> | undefined;
    };

    export const inboundSchema: z.ZodType<Deal, z.ZodTypeDef, Inbound> = z
        .object({
            attributes: z.lazy(() => DealSchemasAttributes$.inboundSchema).optional(),
            id: z.string().optional(),
            linkedCompaniesIds: z.array(z.string()).optional(),
            linkedContactsIds: z.array(z.number().int()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.attributes === undefined ? null : { attributes: v.attributes }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.linkedCompaniesIds === undefined
                    ? null
                    : { linkedCompaniesIds: v.linkedCompaniesIds }),
                ...(v.linkedContactsIds === undefined
                    ? null
                    : { linkedContactsIds: v.linkedContactsIds }),
            };
        });

    export type Outbound = {
        attributes?: DealSchemasAttributes$.Outbound | undefined;
        id?: string | undefined;
        linkedCompaniesIds?: Array<string> | undefined;
        linkedContactsIds?: Array<number> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Deal> = z
        .object({
            attributes: z.lazy(() => DealSchemasAttributes$.outboundSchema).optional(),
            id: z.string().optional(),
            linkedCompaniesIds: z.array(z.string()).optional(),
            linkedContactsIds: z.array(z.number().int()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.attributes === undefined ? null : { attributes: v.attributes }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.linkedCompaniesIds === undefined
                    ? null
                    : { linkedCompaniesIds: v.linkedCompaniesIds }),
                ...(v.linkedContactsIds === undefined
                    ? null
                    : { linkedContactsIds: v.linkedContactsIds }),
            };
        });
}
