/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { GetIp, GetIp$ } from "./getip";
import { z } from "zod";

export type GetIps = {
    /**
     * Dedicated IP(s) available on your account
     */
    ips: Array<GetIp>;
};

/** @internal */
export namespace GetIps$ {
    export type Inbound = {
        ips: Array<GetIp$.Inbound>;
    };

    export const inboundSchema: z.ZodType<GetIps, z.ZodTypeDef, Inbound> = z
        .object({
            ips: z.array(GetIp$.inboundSchema),
        })
        .transform((v) => {
            return {
                ips: v.ips,
            };
        });

    export type Outbound = {
        ips: Array<GetIp$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetIps> = z
        .object({
            ips: z.array(GetIp$.outboundSchema),
        })
        .transform((v) => {
            return {
                ips: v.ips,
            };
        });
}
