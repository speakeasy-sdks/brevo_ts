/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

export class CreateUpdateProducts extends SpeakeasyBase {
    /**
     * Category ID-s of the product
     */
    @SpeakeasyMetadata()
    @Expose({ name: "categories" })
    categories?: string[];

    /**
     * UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) of the product deleted from the shop's database
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deletedAt" })
    deletedAt?: string;

    /**
     * Product ID for which you requested the details
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Absolute URL to the cover image of the product
     */
    @SpeakeasyMetadata()
    @Expose({ name: "imageUrl" })
    imageUrl?: string;

    /**
     * Meta data of product such as description, vendor, producer, stock level. The size of cumulative metaInfo shall not exceed **1000 KB**. Maximum length of metaInfo object can be 10.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metaInfo" })
    metaInfo?: Record<string, any>;

    /**
     * Mandatory in case of creation**. Name of the product for which you requested the details
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * Parent product id of the product
     */
    @SpeakeasyMetadata()
    @Expose({ name: "parentId" })
    parentId?: string;

    /**
     * Price of the product
     */
    @SpeakeasyMetadata()
    @Expose({ name: "price" })
    price?: number;

    /**
     * Product identifier from the shop
     */
    @SpeakeasyMetadata()
    @Expose({ name: "sku" })
    sku?: string;

    /**
     * URL to the product
     */
    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;
}
