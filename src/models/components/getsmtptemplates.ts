/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { GetSmtpTemplateOverview, GetSmtpTemplateOverview$ } from "./getsmtptemplateoverview";
import { z } from "zod";

export type GetSmtpTemplates = {
    /**
     * Count of transactional email templates
     */
    count?: number | undefined;
    templates?: Array<GetSmtpTemplateOverview> | undefined;
};

/** @internal */
export namespace GetSmtpTemplates$ {
    export type Inbound = {
        count?: number | undefined;
        templates?: Array<GetSmtpTemplateOverview$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GetSmtpTemplates, z.ZodTypeDef, Inbound> = z
        .object({
            count: z.number().int().optional(),
            templates: z.array(GetSmtpTemplateOverview$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.count === undefined ? null : { count: v.count }),
                ...(v.templates === undefined ? null : { templates: v.templates }),
            };
        });

    export type Outbound = {
        count?: number | undefined;
        templates?: Array<GetSmtpTemplateOverview$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetSmtpTemplates> = z
        .object({
            count: z.number().int().optional(),
            templates: z.array(GetSmtpTemplateOverview$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.count === undefined ? null : { count: v.count }),
                ...(v.templates === undefined ? null : { templates: v.templates }),
            };
        });
}
