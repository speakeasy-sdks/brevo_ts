/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type CreateUpdateBatchProductsModel = {
    /**
     * Number of the new created products
     */
    createdCount?: number | undefined;
    /**
     * Number of the existing products updated
     */
    updatedCount?: number | undefined;
};

/** @internal */
export namespace CreateUpdateBatchProductsModel$ {
    export type Inbound = {
        createdCount?: number | undefined;
        updatedCount?: number | undefined;
    };

    export const inboundSchema: z.ZodType<CreateUpdateBatchProductsModel, z.ZodTypeDef, Inbound> = z
        .object({
            createdCount: z.number().int().optional(),
            updatedCount: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.createdCount === undefined ? null : { createdCount: v.createdCount }),
                ...(v.updatedCount === undefined ? null : { updatedCount: v.updatedCount }),
            };
        });

    export type Outbound = {
        createdCount?: number | undefined;
        updatedCount?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateUpdateBatchProductsModel> =
        z
            .object({
                createdCount: z.number().int().optional(),
                updatedCount: z.number().int().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.createdCount === undefined ? null : { createdCount: v.createdCount }),
                    ...(v.updatedCount === undefined ? null : { updatedCount: v.updatedCount }),
                };
            });
}
