/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UploadImageToGallery = {
    /**
     * The absolute url of the image (**no local file**). Maximum allowed size for image is **2MB**.
     *
     * @remarks
     * Allowed extensions for images are:
     * #### jpeg, jpg, png, bmp, gif.
     *
     */
    imageUrl: string;
    /**
     * Name of the image.
     */
    name?: string | undefined;
};

/** @internal */
export namespace UploadImageToGallery$ {
    export type Inbound = {
        imageUrl: string;
        name?: string | undefined;
    };

    export const inboundSchema: z.ZodType<UploadImageToGallery, z.ZodTypeDef, Inbound> = z
        .object({
            imageUrl: z.string(),
            name: z.string().optional(),
        })
        .transform((v) => {
            return {
                imageUrl: v.imageUrl,
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });

    export type Outbound = {
        imageUrl: string;
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UploadImageToGallery> = z
        .object({
            imageUrl: z.string(),
            name: z.string().optional(),
        })
        .transform((v) => {
            return {
                imageUrl: v.imageUrl,
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });
}
