/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { GetDeviceBrowserStats, GetDeviceBrowserStats$ } from "./getdevicebrowserstats";
import * as z from "zod";

export type GetStatsByDevice = {
    /**
     * Statistics of the campaign on the basis of desktop devices
     */
    desktop?: Record<string, GetDeviceBrowserStats> | undefined;
    /**
     * Statistics of the campaign on the basis of mobile devices
     */
    mobile?: Record<string, GetDeviceBrowserStats> | undefined;
    /**
     * Statistics of the campaign on the basis of tablet devices
     */
    tablet?: Record<string, GetDeviceBrowserStats> | undefined;
    /**
     * Statistics of the campaign on the basis of unknown devices
     */
    unknown?: Record<string, GetDeviceBrowserStats> | undefined;
};

/** @internal */
export namespace GetStatsByDevice$ {
    export type Inbound = {
        desktop?: Record<string, GetDeviceBrowserStats$.Inbound> | undefined;
        mobile?: Record<string, GetDeviceBrowserStats$.Inbound> | undefined;
        tablet?: Record<string, GetDeviceBrowserStats$.Inbound> | undefined;
        unknown?: Record<string, GetDeviceBrowserStats$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GetStatsByDevice, z.ZodTypeDef, Inbound> = z
        .object({
            desktop: z.record(GetDeviceBrowserStats$.inboundSchema).optional(),
            mobile: z.record(GetDeviceBrowserStats$.inboundSchema).optional(),
            tablet: z.record(GetDeviceBrowserStats$.inboundSchema).optional(),
            unknown: z.record(GetDeviceBrowserStats$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.desktop === undefined ? null : { desktop: v.desktop }),
                ...(v.mobile === undefined ? null : { mobile: v.mobile }),
                ...(v.tablet === undefined ? null : { tablet: v.tablet }),
                ...(v.unknown === undefined ? null : { unknown: v.unknown }),
            };
        });

    export type Outbound = {
        desktop?: Record<string, GetDeviceBrowserStats$.Outbound> | undefined;
        mobile?: Record<string, GetDeviceBrowserStats$.Outbound> | undefined;
        tablet?: Record<string, GetDeviceBrowserStats$.Outbound> | undefined;
        unknown?: Record<string, GetDeviceBrowserStats$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetStatsByDevice> = z
        .object({
            desktop: z.record(GetDeviceBrowserStats$.outboundSchema).optional(),
            mobile: z.record(GetDeviceBrowserStats$.outboundSchema).optional(),
            tablet: z.record(GetDeviceBrowserStats$.outboundSchema).optional(),
            unknown: z.record(GetDeviceBrowserStats$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.desktop === undefined ? null : { desktop: v.desktop }),
                ...(v.mobile === undefined ? null : { mobile: v.mobile }),
                ...(v.tablet === undefined ? null : { tablet: v.tablet }),
                ...(v.unknown === undefined ? null : { unknown: v.unknown }),
            };
        });
}
