/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

export enum Types {
    Email = "email",
    Push = "push",
}

/**
 * Unit of time before reminder is to be sent
 */
export enum Unit {
    Minutes = "minutes",
    Hours = "hours",
    Weeks = "weeks",
    Days = "days",
}

/**
 * Task reminder date/time for a task
 */
export class TaskReminder extends SpeakeasyBase {
    /**
     * Type of task reminder e.g email, push
     */
    @SpeakeasyMetadata()
    @Expose({ name: "types" })
    types: Types[];

    /**
     * Unit of time before reminder is to be sent
     */
    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    unit: Unit;

    /**
     * Value of time unit before reminder is to be sent
     */
    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value: number;
}
