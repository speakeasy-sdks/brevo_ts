/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Event which occurred
 */
export enum Event {
    Bounces = "bounces",
    HardBounces = "hardBounces",
    SoftBounces = "softBounces",
    Delivered = "delivered",
    Spam = "spam",
    Requests = "requests",
    Opened = "opened",
    Clicks = "clicks",
    Invalid = "invalid",
    Deferred = "deferred",
    Blocked = "blocked",
    Unsubscribed = "unsubscribed",
    Error = "error",
    LoadedByProxy = "loadedByProxy",
}

export class GetEmailEventReportEvents extends SpeakeasyBase {
    /**
     * UTC date-time on which the event has been generated
     */
    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    date: string;

    /**
     * Email address which generates the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email: string;

    /**
     * Event which occurred
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event" })
    event: Event;

    /**
     * Sender email from which the emails are sent
     */
    @SpeakeasyMetadata()
    @Expose({ name: "from" })
    from?: string;

    /**
     * IP from which the user has opened the email or clicked on the link (only available if the event is opened or clicks)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ip" })
    ip?: string;

    /**
     * The link which is sent to the user (only available if the event is requests or opened or clicks)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "link" })
    link?: string;

    /**
     * Message ID which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "messageId" })
    messageId: string;

    /**
     * Reason of bounce (only available if the event is hardbounce or softbounce)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reason" })
    reason?: string;

    /**
     * Subject of the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subject" })
    subject?: string;

    /**
     * Tag of the email which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tag" })
    tag?: string;

    /**
     * ID of the template (only available if the email is template based)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "templateId" })
    templateId?: number;
}

export class GetEmailEventReport extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: GetEmailEventReportEvents })
    @Expose({ name: "events" })
    @Type(() => GetEmailEventReportEvents)
    events?: GetEmailEventReportEvents[];
}
