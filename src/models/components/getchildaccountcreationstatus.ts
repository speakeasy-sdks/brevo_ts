/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetChildAccountCreationStatus = {
    /**
     * Status of child account creation whether it is successfully created (exists) or not.
     */
    childAccountCreated: boolean;
};

/** @internal */
export namespace GetChildAccountCreationStatus$ {
    export type Inbound = {
        childAccountCreated: boolean;
    };

    export const inboundSchema: z.ZodType<GetChildAccountCreationStatus, z.ZodTypeDef, Inbound> = z
        .object({
            childAccountCreated: z.boolean(),
        })
        .transform((v) => {
            return {
                childAccountCreated: v.childAccountCreated,
            };
        });

    export type Outbound = {
        childAccountCreated: boolean;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetChildAccountCreationStatus> =
        z
            .object({
                childAccountCreated: z.boolean(),
            })
            .transform((v) => {
                return {
                    childAccountCreated: v.childAccountCreated,
                };
            });
}
