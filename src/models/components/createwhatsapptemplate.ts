/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

/**
 * Category of the template
 */
export enum Category {
    Marketing = "MARKETING",
    Transactional = "TRANSACTIONAL",
}

export type CreateWhatsAppTemplate = {
    /**
     * Body of the template. **Maximum allowed characters are 1024**
     */
    bodyText: string;
    /**
     * Category of the template
     */
    category: Category;
    /**
     * Text content of the header in the template. **Maximum allowed characters are 45**
     *
     * @remarks
     * **Use this field to add text content in template header and if mediaUrl is empty**
     *
     */
    headerText?: string | undefined;
    /**
     * Language of the template. For Example :
     *
     * @remarks
     * **en** for English
     *
     */
    language: string;
    /**
     * Absolute url of the media file **(no local file)** for the header. **Use this field in you want to add media in Template header and headerText is empty**.
     *
     * @remarks
     * Allowed extensions for media files are:
     * #### jpeg | png | mp4 | pdf
     *
     */
    mediaUrl?: string | undefined;
    /**
     * Name of the template
     */
    name: string;
};

/** @internal */
export const Category$ = z.nativeEnum(Category);

/** @internal */
export namespace CreateWhatsAppTemplate$ {
    export type Inbound = {
        bodyText: string;
        category: Category;
        headerText?: string | undefined;
        language: string;
        mediaUrl?: string | undefined;
        name: string;
    };

    export const inboundSchema: z.ZodType<CreateWhatsAppTemplate, z.ZodTypeDef, Inbound> = z
        .object({
            bodyText: z.string(),
            category: Category$,
            headerText: z.string().optional(),
            language: z.string(),
            mediaUrl: z.string().optional(),
            name: z.string(),
        })
        .transform((v) => {
            return {
                bodyText: v.bodyText,
                category: v.category,
                ...(v.headerText === undefined ? null : { headerText: v.headerText }),
                language: v.language,
                ...(v.mediaUrl === undefined ? null : { mediaUrl: v.mediaUrl }),
                name: v.name,
            };
        });

    export type Outbound = {
        bodyText: string;
        category: Category;
        headerText?: string | undefined;
        language: string;
        mediaUrl?: string | undefined;
        name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateWhatsAppTemplate> = z
        .object({
            bodyText: z.string(),
            category: Category$,
            headerText: z.string().optional(),
            language: z.string(),
            mediaUrl: z.string().optional(),
            name: z.string(),
        })
        .transform((v) => {
            return {
                bodyText: v.bodyText,
                category: v.category,
                ...(v.headerText === undefined ? null : { headerText: v.headerText }),
                language: v.language,
                ...(v.mediaUrl === undefined ? null : { mediaUrl: v.mediaUrl }),
                name: v.name,
            };
        });
}
