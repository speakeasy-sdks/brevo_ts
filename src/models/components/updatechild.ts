/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UpdateChild = {
    /**
     * New Company name to use to update the child account
     */
    companyName?: string | undefined;
    /**
     * New Email address to update the child account
     */
    email?: string | undefined;
    /**
     * New First name to use to update the child account
     */
    firstName?: string | undefined;
    /**
     * New Last name to use to update the child account
     */
    lastName?: string | undefined;
    /**
     * New password for the child account to login
     */
    password?: string | undefined;
};

/** @internal */
export namespace UpdateChild$ {
    export type Inbound = {
        companyName?: string | undefined;
        email?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        password?: string | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateChild, z.ZodTypeDef, Inbound> = z
        .object({
            companyName: z.string().optional(),
            email: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            password: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.password === undefined ? null : { password: v.password }),
            };
        });

    export type Outbound = {
        companyName?: string | undefined;
        email?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        password?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateChild> = z
        .object({
            companyName: z.string().optional(),
            email: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            password: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.password === undefined ? null : { password: v.password }),
            };
        });
}
