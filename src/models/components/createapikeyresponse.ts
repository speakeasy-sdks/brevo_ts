/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateApiKeyResponse = {
    /**
     * API key
     */
    key: string;
    /**
     * Status of the API operation.
     */
    status: string;
};

/** @internal */
export namespace CreateApiKeyResponse$ {
    export type Inbound = {
        key: string;
        status: string;
    };

    export const inboundSchema: z.ZodType<CreateApiKeyResponse, z.ZodTypeDef, Inbound> = z
        .object({
            key: z.string(),
            status: z.string(),
        })
        .transform((v) => {
            return {
                key: v.key,
                status: v.status,
            };
        });

    export type Outbound = {
        key: string;
        status: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateApiKeyResponse> = z
        .object({
            key: z.string(),
            status: z.string(),
        })
        .transform((v) => {
            return {
                key: v.key,
                status: v.status,
            };
        });
}
