/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type WhatsappCampStats = {
    delivered: number;
    notSent: number;
    read: number;
    sent: number;
    unsubscribe: number;
};

/** @internal */
export namespace WhatsappCampStats$ {
    export type Inbound = {
        delivered: number;
        notSent: number;
        read: number;
        sent: number;
        unsubscribe: number;
    };

    export const inboundSchema: z.ZodType<WhatsappCampStats, z.ZodTypeDef, Inbound> = z
        .object({
            delivered: z.number().int(),
            notSent: z.number().int(),
            read: z.number().int(),
            sent: z.number().int(),
            unsubscribe: z.number().int(),
        })
        .transform((v) => {
            return {
                delivered: v.delivered,
                notSent: v.notSent,
                read: v.read,
                sent: v.sent,
                unsubscribe: v.unsubscribe,
            };
        });

    export type Outbound = {
        delivered: number;
        notSent: number;
        read: number;
        sent: number;
        unsubscribe: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WhatsappCampStats> = z
        .object({
            delivered: z.number().int(),
            notSent: z.number().int(),
            read: z.number().int(),
            sent: z.number().int(),
            unsubscribe: z.number().int(),
        })
        .transform((v) => {
            return {
                delivered: v.delivered,
                notSent: v.notSent,
                read: v.read,
                sent: v.sent,
                unsubscribe: v.unsubscribe,
            };
        });
}
