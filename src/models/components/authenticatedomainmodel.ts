/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type AuthenticateDomainModel = {
    /**
     * Domain
     */
    domainName: string;
    /**
     * Success message
     */
    message: string;
};

/** @internal */
export namespace AuthenticateDomainModel$ {
    export type Inbound = {
        domain_name: string;
        message: string;
    };

    export const inboundSchema: z.ZodType<AuthenticateDomainModel, z.ZodTypeDef, Inbound> = z
        .object({
            domain_name: z.string(),
            message: z.string(),
        })
        .transform((v) => {
            return {
                domainName: v.domain_name,
                message: v.message,
            };
        });

    export type Outbound = {
        domain_name: string;
        message: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthenticateDomainModel> = z
        .object({
            domainName: z.string(),
            message: z.string(),
        })
        .transform((v) => {
            return {
                domain_name: v.domainName,
                message: v.message,
            };
        });
}
