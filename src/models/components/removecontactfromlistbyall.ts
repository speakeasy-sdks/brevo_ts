/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type RemoveContactFromListByAll = {
    /**
     * **Required if 'emails' and 'ids' are empty.** Remove all existing contacts from a list. A process will be created in this scenario. You can fetch the process details to know about the progress
     *
     * @remarks
     *
     */
    all?: boolean | undefined;
};

/** @internal */
export namespace RemoveContactFromListByAll$ {
    export type Inbound = {
        all?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<RemoveContactFromListByAll, z.ZodTypeDef, Inbound> = z
        .object({
            all: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.all === undefined ? null : { all: v.all }),
            };
        });

    export type Outbound = {
        all?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RemoveContactFromListByAll> = z
        .object({
            all: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.all === undefined ? null : { all: v.all }),
            };
        });
}
