/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type GetBlockedDomains = {
    /**
     * List of all blocked domains
     */
    domains: Array<string>;
};

/** @internal */
export namespace GetBlockedDomains$ {
    export type Inbound = {
        domains: Array<string>;
    };

    export const inboundSchema: z.ZodType<GetBlockedDomains, z.ZodTypeDef, Inbound> = z
        .object({
            domains: z.array(z.string()),
        })
        .transform((v) => {
            return {
                domains: v.domains,
            };
        });

    export type Outbound = {
        domains: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetBlockedDomains> = z
        .object({
            domains: z.array(z.string()),
        })
        .transform((v) => {
            return {
                domains: v.domains,
            };
        });
}
