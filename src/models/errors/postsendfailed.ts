/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../../internal/utils";
import { classToPlain, Expose } from "class-transformer";

/**
 * Test email could not be sent to the following email addresses
 */
export class PostSendFailed extends Error {
    @SpeakeasyMetadata()
    @Expose({ name: "blackListedEmails" })
    blackListedEmails?: string[];

    /**
     * Response code
     */
    @SpeakeasyMetadata()
    @Expose({ name: "code" })
    code: string;

    /**
     * Response message
     */
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message: string;

    @SpeakeasyMetadata()
    @Expose({ name: "unexistingEmails" })
    unexistingEmails?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "withoutListEmails" })
    withoutListEmails?: string[];

    constructor(err?: PostSendFailed) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "PostSendFailed";
        Object.setPrototypeOf(this, PostSendFailed.prototype);
    }
}
