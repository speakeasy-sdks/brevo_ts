/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Event which occurred
 */
export enum GetWhatsappEventReportEventsEvent {
    Sent = "sent",
    Delivered = "delivered",
    Read = "read",
    Error = "error",
    Unsubscribe = "unsubscribe",
    Reply = "reply",
    SoftBounce = "soft-bounce",
}

export class GetWhatsappEventReportEvents extends SpeakeasyBase {
    /**
     * Text of the reply (will be there only in case of `reply` event with text)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "body" })
    body?: string;

    /**
     * WhatsApp Number with country code. Example, 85264318721
     */
    @SpeakeasyMetadata()
    @Expose({ name: "contactNumber" })
    contactNumber: string;

    /**
     * UTC date-time on which the event has been generated
     */
    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    date: string;

    /**
     * Event which occurred
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event" })
    event: GetWhatsappEventReportEventsEvent;

    /**
     * Url of the media reply (will be there only in case of `reply` event with media)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "mediaUrl" })
    mediaUrl?: string;

    /**
     * Message ID which generated the event
     */
    @SpeakeasyMetadata()
    @Expose({ name: "messageId" })
    messageId: string;

    /**
     * Reason for the event (will be there in case of `error` and `soft-bounce` events)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reason" })
    reason?: string;

    /**
     * WhatsApp Number with country code. Example, 85264318721
     */
    @SpeakeasyMetadata()
    @Expose({ name: "senderNumber" })
    senderNumber: string;
}

/**
 * WhatsApp events report
 */
export class GetWhatsappEventReport extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: GetWhatsappEventReportEvents })
    @Expose({ name: "events" })
    @Type(() => GetWhatsappEventReportEvents)
    events?: GetWhatsappEventReportEvents[];
}
