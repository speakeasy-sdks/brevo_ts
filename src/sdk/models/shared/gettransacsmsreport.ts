/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import { Expose, Transform, Type } from "class-transformer";

export class GetTransacSmsReportReports extends SpeakeasyBase {
    /**
     * Number of accepted for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "accepted" })
    accepted?: number;

    /**
     * Number of blocked contact for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "blocked" })
    blocked?: number;

    /**
     * Date for which statistics are retrieved
     */
    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    date?: RFCDate;

    /**
     * Number of delivered SMS for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "delivered" })
    delivered?: number;

    /**
     * Number of hardbounces for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hardBounces" })
    hardBounces?: number;

    /**
     * Number of rejected for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "rejected" })
    rejected?: number;

    /**
     * Number of answered SMS for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "replied" })
    replied?: number;

    /**
     * Number of requests for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "requests" })
    requests?: number;

    /**
     * Number of softbounces for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "softBounces" })
    softBounces?: number;

    /**
     * Number of unsubscription for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "unsubscribed" })
    unsubscribed?: number;
}

export class GetTransacSmsReport extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: GetTransacSmsReportReports })
    @Expose({ name: "reports" })
    @Type(() => GetTransacSmsReportReports)
    reports?: GetTransacSmsReportReports[];
}
