/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class RequestContactImportJsonBody extends SpeakeasyBase {
    /**
     * List of attributes to be imported
     */
    @SpeakeasyMetadata()
    @Expose({ name: "attributes" })
    attributes?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;
}

/**
 * To create a new list and import the contacts into it, pass the listName and an optional folderId.
 */
export class RequestContactImportNewList extends SpeakeasyBase {
    /**
     * Id of the folder where this new list shall be created. **Mandatory if listName is not empty**
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "folderId" })
    folderId?: number;

    /**
     * List with listName will be created first and users will be imported in it. **Mandatory if listIds is empty**.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "listName" })
    listName?: string;
}

/**
 * Values to import contacts in Brevo. To know more about the expected format, please have a look at ``https://help.brevo.com/hc/en-us/articles/209499265-Build-contacts-lists-for-your-email-marketing-campaigns``
 */
export class RequestContactImport extends SpeakeasyBase {
    /**
     * To blacklist all the contacts for email
     */
    @SpeakeasyMetadata()
    @Expose({ name: "emailBlacklist" })
    emailBlacklist?: boolean;

    /**
     * To facilitate the choice to erase any attribute of the existing contacts with empty value. emptyContactsAttributes = true means the empty fields in your import will erase any attribute that currently contain data in Brevo, & emptyContactsAttributes = false means the empty fields will not affect your existing data ( **only available if `updateExistingContacts` set to true **)
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "emptyContactsAttributes" })
    emptyContactsAttributes?: boolean;

    /**
     * **Mandatory if fileUrl and jsonBody is not defined.** CSV content to be imported. Use semicolon to separate multiple attributes. **Maximum allowed file body size is 10MB** . However we recommend a safe limit of around 8 MB to avoid the issues caused due to increase of file body size while parsing. Please use fileUrl instead to import bigger files.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fileBody" })
    fileBody?: string;

    /**
     * **Mandatory if fileBody and jsonBody is not defined.** URL of the file to be imported (**no local file**). Possible file formats:
     *
     * @remarks
     * #### .txt, .csv, .json
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fileUrl" })
    fileUrl?: string;

    /**
     * **Mandatory if fileUrl and fileBody is not defined.** JSON content to be imported. **Maximum allowed json body size is 10MB** . However we recommend a safe limit of around 8 MB to avoid the issues caused due to increase of json body size while parsing. Please use fileUrl instead to import bigger files.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata({ elemType: RequestContactImportJsonBody })
    @Expose({ name: "jsonBody" })
    @Type(() => RequestContactImportJsonBody)
    jsonBody?: RequestContactImportJsonBody[];

    /**
     * **Mandatory if newList is not defined.** Ids of the lists in which the contacts shall be imported. For example, **[2, 4, 7]**.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "listIds" })
    listIds?: number[];

    /**
     * To create a new list and import the contacts into it, pass the listName and an optional folderId.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "newList" })
    @Type(() => RequestContactImportNewList)
    newList?: RequestContactImportNewList;

    /**
     * URL that will be called once the import process is finished. For reference, https://help.brevo.com/hc/en-us/articles/360007666479
     */
    @SpeakeasyMetadata()
    @Expose({ name: "notifyUrl" })
    notifyUrl?: string;

    /**
     * To blacklist all the contacts for sms
     */
    @SpeakeasyMetadata()
    @Expose({ name: "smsBlacklist" })
    smsBlacklist?: boolean;

    /**
     * To facilitate the choice to update the existing contacts
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updateExistingContacts" })
    updateExistingContacts?: boolean;
}
