/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class GetSmtpTemplateOverviewSender extends SpeakeasyBase {
    /**
     * From email for the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    /**
     * Sender id of the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * From email for the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class GetSmtpTemplateOverview extends SpeakeasyBase {
    /**
     * Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    /**
     * It is true if template is a valid Double opt-in (DOI) template, otherwise it is false. This field will be available only in case of single template detail call.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "doiTemplate" })
    doiTemplate?: boolean;

    /**
     * HTML content of the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "htmlContent" })
    htmlContent: string;

    /**
     * ID of the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    /**
     * Status of template (true=active, false=inactive)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "isActive" })
    isActive: boolean;

    /**
     * Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "modifiedAt" })
    modifiedAt: string;

    /**
     * Name of the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * Email defined as the "Reply to" for the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "replyTo" })
    replyTo: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sender" })
    @Type(() => GetSmtpTemplateOverviewSender)
    sender: GetSmtpTemplateOverviewSender;

    /**
     * Subject of the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subject" })
    subject: string;

    /**
     * Tag of the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tag" })
    tag: string;

    /**
     * Status of test sending for the template (true=test email has been sent, false=test email has not been sent)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "testSent" })
    testSent: boolean;

    /**
     * Customisation of the "to" field for the template
     */
    @SpeakeasyMetadata()
    @Expose({ name: "toField" })
    toField: string;
}
