/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * image info is passed in case the file is an image
 */
export class ConversationsMessageFileImageInfo extends SpeakeasyBase {
    /**
     * height of the image
     */
    @SpeakeasyMetadata()
    @Expose({ name: "height" })
    height?: number;

    /**
     * URL of the preview
     */
    @SpeakeasyMetadata()
    @Expose({ name: "previewUrl" })
    previewUrl?: string;

    /**
     * Width of the image
     */
    @SpeakeasyMetadata()
    @Expose({ name: "width" })
    width?: number;
}

export class ConversationsMessageFile extends SpeakeasyBase {
    /**
     * Name of the file
     */
    @SpeakeasyMetadata()
    @Expose({ name: "filename" })
    filename?: string;

    /**
     * image info is passed in case the file is an image
     */
    @SpeakeasyMetadata()
    @Expose({ name: "imageInfo" })
    @Type(() => ConversationsMessageFileImageInfo)
    imageInfo?: ConversationsMessageFileImageInfo;

    /**
     * Whether the file is an image
     */
    @SpeakeasyMetadata()
    @Expose({ name: "isImage" })
    isImage?: boolean;

    /**
     * Size in bytes
     */
    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    /**
     * URL of the file
     */
    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;
}

/**
 * `"agent"` for agents’ messages, `"visitor"` for visitors’ messages.
 */
export enum ConversationsMessageType {
    Agent = "agent",
    Visitor = "visitor",
}

/**
 * a Conversations message
 */
export class ConversationsMessage extends SpeakeasyBase {
    /**
     * ID of the agent on whose behalf the message was sent (only in messages sent by an agent).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "agentId" })
    agentId?: string;

    /**
     * Agent’s name as displayed to the visitor. Only in the messages sent by an agent.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "agentName" })
    agentName?: string;

    /**
     * Timestamp in milliseconds.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "file" })
    @Type(() => ConversationsMessageFile)
    file?: ConversationsMessageFile;

    /**
     * Message ID. It can be used for further manipulations with the message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * `true` for pushed messages
     */
    @SpeakeasyMetadata()
    @Expose({ name: "isPushed" })
    isPushed?: boolean;

    /**
     * In two-way integrations, messages sent via REST API can be marked with receivedFrom property and then filtered out when received in a webhook to avoid infinite loop.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "receivedFrom" })
    receivedFrom?: string;

    /**
     * Message text or name of the attached file
     */
    @SpeakeasyMetadata()
    @Expose({ name: "text" })
    text?: string;

    /**
     * `"agent"` for agents’ messages, `"visitor"` for visitors’ messages.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: ConversationsMessageType;

    /**
     * visitor’s ID
     */
    @SpeakeasyMetadata()
    @Expose({ name: "visitorId" })
    visitorId?: string;
}
