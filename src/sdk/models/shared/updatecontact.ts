/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class UpdateContact extends SpeakeasyBase {
    /**
     * Pass the set of attributes to be updated. **These attributes must be present in your account**. To update existing email address of a contact with the new one please pass EMAIL in attributes. For example, **{ "EMAIL":"newemail@domain.com", "FNAME":"Ellie", "LNAME":"Roger"}**.
     *
     * @remarks
     * The attribute's parameter should be passed in capital letter while updating a contact. Keep in mind transactional attributes can be updated the same way as normal attributes. Mobile Number in **SMS** field should be passed with proper country code. For example: **{"SMS":"+91xxxxxxxxxx"} or {"SMS":"0091xxxxxxxxxx"}**
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "attributes" })
    attributes?: Record<string, any>;

    /**
     * Set/unset this field to blacklist/allow the contact for emails (emailBlacklisted = true)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "emailBlacklisted" })
    emailBlacklisted?: boolean;

    /**
     * Pass your own Id to update ext_id of a contact.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ext_id" })
    extId?: string;

    /**
     * Ids of the lists to add the contact to
     */
    @SpeakeasyMetadata()
    @Expose({ name: "listIds" })
    listIds?: number[];

    /**
     * Set/unset this field to blacklist/allow the contact for SMS (smsBlacklisted = true)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "smsBlacklisted" })
    smsBlacklisted?: boolean;

    /**
     * transactional email forbidden sender for contact. Use only for email Contact
     */
    @SpeakeasyMetadata()
    @Expose({ name: "smtpBlacklistSender" })
    smtpBlacklistSender?: string[];

    /**
     * Ids of the lists to remove the contact from
     */
    @SpeakeasyMetadata()
    @Expose({ name: "unlinkListIds" })
    unlinkListIds?: number[];
}
