/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import { Expose, Transform, Type } from "class-transformer";

export class GetReportsReports extends SpeakeasyBase {
    /**
     * Number of blocked emails for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "blocked" })
    blocked: number;

    /**
     * Number of clicks for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "clicks" })
    clicks: number;

    /**
     * Date of the statistics
     */
    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    date: RFCDate;

    /**
     * Number of delivered emails for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "delivered" })
    delivered: number;

    /**
     * Number of hardbounces for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hardBounces" })
    hardBounces: number;

    /**
     * Number of invalid emails for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "invalid" })
    invalid: number;

    /**
     * Number of openings for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "opens" })
    opens: number;

    /**
     * Number of requests for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "requests" })
    requests: number;

    /**
     * Number of softbounces for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "softBounces" })
    softBounces: number;

    /**
     * Number of complaints (spam reports) for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "spamReports" })
    spamReports: number;

    /**
     * Number of unique clicks for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "uniqueClicks" })
    uniqueClicks: number;

    /**
     * Number of unique openings for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "uniqueOpens" })
    uniqueOpens: number;

    /**
     * Number of unsubscribed emails for the date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "unsubscribed" })
    unsubscribed: number;
}

export class GetReports extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: GetReportsReports })
    @Expose({ name: "reports" })
    @Type(() => GetReportsReports)
    reports?: GetReportsReports[];
}
