/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Auth type of the feed: * `basic` * `token` * `noAuth`
 *
 * @remarks
 *
 */
export enum GetExternalFeedByUUIDAuthType {
    Basic = "basic",
    Token = "token",
    NoAuth = "noAuth",
}

export class GetExternalFeedByUUIDHeaders extends SpeakeasyBase {
    /**
     * Name of the header
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Value of the header
     */
    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}

/**
 * External feed
 */
export class GetExternalFeedByUUID extends SpeakeasyBase {
    /**
     * Auth type of the feed: * `basic` * `token` * `noAuth`
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "authType" })
    authType: GetExternalFeedByUUIDAuthType;

    /**
     * Toggle caching of feed url response
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cache" })
    cache: boolean;

    /**
     * Datetime on which the feed was created
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt: Date;

    /**
     * Custom headers for the feed
     */
    @SpeakeasyMetadata({ elemType: GetExternalFeedByUUIDHeaders })
    @Expose({ name: "headers" })
    @Type(() => GetExternalFeedByUUIDHeaders)
    headers: GetExternalFeedByUUIDHeaders[];

    /**
     * ID of the feed
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Maximum number of retries on the feed url
     */
    @SpeakeasyMetadata()
    @Expose({ name: "maxRetries" })
    maxRetries: number;

    /**
     * Datetime on which the feed was modified
     */
    @SpeakeasyMetadata()
    @Expose({ name: "modifiedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    modifiedAt: Date;

    /**
     * Name of the feed
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * Password for authType `basic`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "password" })
    password?: string;

    /**
     * Token for authType `token`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "token" })
    token?: string;

    /**
     * URL of the feed
     */
    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url: string;

    /**
     * Username for authType `basic`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username?: string;
}
