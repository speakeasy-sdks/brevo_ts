/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Attributes for deal update
 *
 * @remarks
 *
 * If you wish to update the pipeline of a deal you need to provide the `pipeline` and the `deal_stage`
 *
 * Pipeline and deal_stage are ids you can fetch using this endpoint `/crm/pipeline/details/{pipelineID}`
 *
 */
export class PatchCrmDealsIdRequestBodyAttributes extends SpeakeasyBase {}

/**
 * Updated deal details.
 */
export class PatchCrmDealsIdRequestBody extends SpeakeasyBase {
    /**
     * Attributes for deal update
     *
     * @remarks
     *
     * If you wish to update the pipeline of a deal you need to provide the `pipeline` and the `deal_stage`
     *
     * Pipeline and deal_stage are ids you can fetch using this endpoint `/crm/pipeline/details/{pipelineID}`
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "attributes" })
    @Type(() => PatchCrmDealsIdRequestBodyAttributes)
    attributes?: PatchCrmDealsIdRequestBodyAttributes;

    /**
     * Name of deal
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class PatchCrmDealsIdRequest extends SpeakeasyBase {
    /**
     * Updated deal details.
     */
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody: PatchCrmDealsIdRequestBody;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;
}

export class PatchCrmDealsIdResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Returned when invalid data posted
     */
    @SpeakeasyMetadata()
    errorModel?: shared.ErrorModel;
}
