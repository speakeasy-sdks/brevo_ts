/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed
 */
export enum GetSmtpTemplatesSort {
    Asc = "asc",
    Desc = "desc",
}

export class GetSmtpTemplatesRequest extends SpeakeasyBase {
    /**
     * Number of documents returned per page
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;

    /**
     * Index of the first document in the page
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=offset" })
    offset?: number;

    /**
     * Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
    sort?: GetSmtpTemplatesSort;

    /**
     * Filter on the status of the template. Active = true, inactive = false
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=templateStatus" })
    templateStatus?: boolean;
}

export class GetSmtpTemplatesResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * bad request
     */
    @SpeakeasyMetadata()
    errorModel?: shared.ErrorModel;

    /**
     * transactional email templates informations
     */
    @SpeakeasyMetadata()
    getSmtpTemplates?: shared.GetSmtpTemplates;
}
