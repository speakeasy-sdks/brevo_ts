/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed
 */
export enum GetProductsSort {
    Asc = "asc",
    Desc = "desc",
}

export class GetProductsRequest extends SpeakeasyBase {
    /**
     * Filter by product categories
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=categories" })
    categories?: string[];

    /**
     * Filter by product ids
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ids" })
    ids?: string[];

    /**
     * Number of documents per page
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;

    /**
     * Filter by product name, minimum 3 characters should be present for search
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
    name?: string;

    /**
     * Index of the first document in the page
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=offset" })
    offset?: number;

    /**
     * Price filter for products equals to particular amount
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=price[eq]" })
    priceEq?: number;

    /**
     * Price filter for products greater than particular amount
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=price[gt]" })
    priceGt?: number;

    /**
     * Price filter for products greater than and equals to particular amount
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=price[gte]" })
    priceGte?: number;

    /**
     * Price filter for products less than particular amount
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=price[lt]" })
    priceLt?: number;

    /**
     * Price filter for products less than and equals to particular amount
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=price[lte]" })
    priceLte?: number;

    /**
     * Price filter for products not equals to particular amount
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=price[ne]" })
    priceNe?: number;

    /**
     * Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
    sort?: GetProductsSort;
}

export class GetProductsResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * bad request
     */
    @SpeakeasyMetadata()
    errorModel?: shared.ErrorModel;

    /**
     * All products listed
     */
    @SpeakeasyMetadata()
    getProducts?: shared.GetProducts;
}
