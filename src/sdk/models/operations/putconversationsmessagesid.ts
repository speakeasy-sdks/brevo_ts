/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PutConversationsMessagesIdRequestBody extends SpeakeasyBase {
    /**
     * edited message text
     */
    @SpeakeasyMetadata()
    @Expose({ name: "text" })
    text: string;
}

export class PutConversationsMessagesIdRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody: PutConversationsMessagesIdRequestBody;

    /**
     * ID of the message
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;
}

export class PutConversationsMessagesIdResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Updated message is returned as a response
     */
    @SpeakeasyMetadata()
    conversationsMessage?: shared.ConversationsMessage;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Returned when invalid data posted
     */
    @SpeakeasyMetadata()
    errorModel?: shared.ErrorModel;
}
